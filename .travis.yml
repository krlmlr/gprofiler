# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r
# Default configuration for use with tic package
# Usually you shouldn't need to change the first part of the file

# DO NOT CHANGE THE CODE BELOW
before_install: R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
install: R -q -e 'tic::install()'
after_install: R -q -e 'tic::after_install()'
before_script: R -q -e 'tic::before_script()'
script: R -q -e 'tic::script()'
after_success: R -q -e 'tic::after_success()'
after_failure: R -q -e 'tic::after_failure()'
before_deploy: R -q -e 'tic::before_deploy()'
deploy:
  provider: script
  script: R -q -e 'tic::deploy()'
  on:
    all_branches: true
after_deploy: R -q -e 'tic::after_deploy()'
after_script: R -q -e 'tic::after_script()'
# DO NOT CHANGE THE CODE ABOVE

# Custom parts:

# Header
language: r
sudo: false
dist: trusty
cache: packages
latex: true

#env
env:
  global:
  - _R_CHECK_FORCE_SUGGESTS_=false
  - MAKEFLAGS="-j 2"

jobs:
  include:
  - addons:
      apt:
        packages:
        - libgoogle-perftools-dev
        - libprotoc-dev
        - libprotobuf-dev
        - protobuf-compiler
        - graphviz # for call graph in vignette
        - librsvg2-dev # for rsvg
    env:
    - KIND=apt
    before_install:
    - go get github.com/google/pprof
    - ln -sf ~/go/bin/pprof ~/bin/
    - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
  - addons:
      apt:
        packages:
        - libunwind8-dev
        - libprotoc-dev
        - libprotobuf-dev
        - protobuf-compiler
        - graphviz # for call graph in vignette
        - librsvg2-dev # for rsvg
    env:
    - KIND=github
    - BUILD_PKGDOWN=true
    before_install:
    - ( cd /tmp && git clone --depth 1 https://github.com/krlmlr/gperftools.git -b f-export-stack )
    - ( cd /tmp/gperftools && ./autogen.sh  )
    - ( cd /tmp/gperftools && ./configure --prefix=${HOME} )
    - ( cd /tmp/gperftools && cat config.log )
    - ( cd /tmp/gperftools && make )
    - ( cd /tmp/gperftools && make install )
    - mkdir -p ~/.R
    - cp .travis/Makevars ~/.R
    - go get github.com/google/pprof
    - ln -sf ~/go/bin/pprof ~/bin/
    - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
  - os: osx
    env:
    - KIND=github
    before_install:
    - brew install graphviz
    - ( cd /tmp && git clone --depth 1 https://github.com/krlmlr/gperftools.git -b f-export-stack )
    - ( cd /tmp/gperftools && ./autogen.sh  )
    - ( cd /tmp/gperftools && CFLAGS=-Wno-deprecated-declarations CXXFLAGS=-Wno-deprecated-declarations ./configure --prefix=${HOME} )
    - ( cd /tmp/gperftools && cat config.log )
    - ( cd /tmp/gperftools && make )
    - ( cd /tmp/gperftools && make install )
    - mkdir -p ~/.R
    - cp .travis/Makevars ~/.R
    - go get github.com/google/pprof
    - ln -sf ~/go/bin/pprof ~/bin/
    - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'
#  - os: osx
#    env:
#    - KIND=brew
#    before_install:
#    - brew install google-perftools
#    - go get github.com/google/pprof
#    - mkdir -p ~/bin
#    - ln -sf ~/go/bin/pprof ~/bin/
#    - R -q -e 'install.packages("remotes"); remotes::install_github("ropenscilabs/tic"); tic::prepare_all_stages(); tic::before_install()'


#services
services:
